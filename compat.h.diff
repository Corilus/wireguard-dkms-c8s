--- wireguard-linux-compat-1.0.20220627/src/compat/compat.h.orig	2022-08-05 13:29:17.788011500 +0200
+++ wireguard-linux-compat-1.0.20220627/src/compat/compat.h	2022-08-05 13:29:39.494567700 +0200
@@ -412,16 +412,6 @@
 }
 #define jiffies64_to_nsecs __compat_jiffies64_to_nsecs
 #endif
-static inline u64 ktime_get_coarse_boottime_ns(void)
-{
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 17, 0)
-	return ktime_to_ns(ktime_get_boottime());
-#elif (LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 12) && LINUX_VERSION_CODE >= KERNEL_VERSION(4, 20, 0)) || LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 53)
-	return ktime_to_ns(ktime_mono_to_any(ns_to_ktime(jiffies64_to_nsecs(get_jiffies_64())), TK_OFFS_BOOT));
-#else
-	return ktime_to_ns(ktime_get_coarse_boottime());
-#endif
-}
 #endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 14, 0)
@@ -706,6 +696,13 @@
 #define NAPI_STATE_NO_BUSY_POLL NAPI_STATE_SCHED
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 18, 0) && !defined(ISRHEL7)
+#include <linux/netdevice.h>
+#ifndef netif_napi_add
+#define netif_napi_add_weight(dev, napi, poll, weight) netif_napi_add((dev), (napi), (poll), (weight))
+#endif
+#endif
+
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 14, 0)
 #include <linux/atomic.h>
 #ifndef atomic_read_acquire
